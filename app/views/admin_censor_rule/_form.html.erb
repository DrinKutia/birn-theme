<%= foi_error_messages_for :censor_rule %>

<div class="well">
  Applies to
  <% unless info_request.nil? %>
    <%= request_both_links(info_request) %>
  <% end %>
  <% unless user.nil? %>
    <%= user_both_links(user) %>
  <% end %>
  <% unless public_body.nil? %>
    <%= public_body_both_links(public_body) %>
  <% end %>
  <% if info_request.nil? && user.nil? && public_body.nil? %>
    <strong>everything</strong>
  <% end %>
</div>

<div class="control-group">
  <label for="censor_rule_regexp" class="control-label">Is it regexp replacement?</label>
  <div class="controls">
    <%= check_box 'censor_rule', 'regexp' %>
    <div class="help-block">
      Leave unchecked if you are not sure about this
    </div>
  </div>
</div>

<div class="control-group">
  <label for="censor_rule_text" class="control-label">Text</label>
  <div class="controls">
    <%= text_field 'censor_rule', 'text', :class => "span3" %>
    <div class="help-block">
      that you want to remove, case sensitive
    </div>
  </div>
</div>

<div class="control-group">
  <label for="censor_rule_replacement" class="control-label">Replacement</label>
  <div class="controls">
    <%= text_field 'censor_rule', 'replacement', :class => "span3"  %>
    <div class="help-block">
      put it in <strong>[square brackets]</strong>, e.g. [personal information removed]. applies to text in emails and HTML conversions of binaries; binaries themselves must stay the same length and the replacement is just a bunch of 'x's
    </div>
  </div>
</div>

<div class="control-group">
  <label for="censor_rule_last_edit_comment" class="control-label">Comment for this edit</label>
  <div class="controls">
    <%= text_area 'censor_rule', 'last_edit_comment', :value => '', :rows => 2, :class => "span6" %>
    <div class="help-block">
      put purpose of the rule, and why the change
    </div>
  </div>
</div>
